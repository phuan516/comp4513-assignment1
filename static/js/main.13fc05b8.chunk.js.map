{"version":3,"sources":["components/SearchContainer.jsx","components/HomePage.jsx","components/HeaderBar.jsx","components/FavoriteItem.jsx","components/FavoritesBox.jsx","components/FilterBox.jsx","components/ListBoxItem.jsx","components/ListBox.jsx","components/DefaultPage.jsx","components/FavoriteItemDetails.jsx","components/FavoritesBoxDetails.jsx","components/TabComponent/DetailsTab.jsx","components/TabComponent/CharactersTab.jsx","components/TabComponent/TextTab.jsx","components/TabComponent/Tabs.jsx","components/PlayDetailPage.jsx","App.js","reportWebVitals.js","index.js"],"names":["SearchContainer","props","useState","title","updateTitle","id","type","placeholder","onChange","e","target","value","to","pathname","state","HomePage","useEffect","timer","setTimeout","console","log","clearTimeout","className","href","HeaderBar","modalIsOpen","setIsOpen","closeModal","src","alt","onClick","isOpen","onRequestClose","FavoriteItem","updateCurrent","play","url","fetch","then","response","json","data","localStorage","setItem","JSON","stringify","removeFromLike","alert","FavoriteBox","plays","map","p","index","updateTab","FilterBox","filter","updateFilter","status","beforeCheck","setBeforeCheck","afterCheck","setAfterCheck","updateFilteredData","handleFieldClick","tempStateObj","name","handleCheckBoxClick","before","after","updateFaveBox","updateIsChecked","onSubmit","preventDefault","htmlFor","disabled","defaultValue","ListBoxItem","likelyDate","addToLike","H1","styled","h1","ListBox","matchesBoolean","style","cursor","sortTitle","sortYear","DefaultPage","location","useLocation","matchesFound","setMatchesFound","filters","setFilteredData","setsortedPlays","showFavorites","isChecked","likedPlays","updatedFilteredData","Object","keys","length","mainData","toLowerCase","forEach","d","genre","includes","push","sortData","sort","a","b","at","bt","ay","parseInt","by","FavoriteItemDetails","FavoriteBoxDetails","DetailsTab","current","wiki","gutenberg","shakespeareOrg","desc","CharactersTab","personas","parse","getItem","persona","position","player","TextTab","currentSpeaker","playInfo","currentAct","currentScene","acts","scenes","s","stageDirection","speeches","speaker","searchWords","highlightedWord","textToHighlight","String","lines","Tabs","filename","tab","tabIsText","PlayDetailPage","setTab","setCurrentAct","setCurrentScene","setCurrentSpeaker","setHighlightedWord","updateTabThroughClick","getInfo","error","updateBoxForFave","i","act","synopsis","App","setData","filteredData","like","setLike","currentPlay","setCurrentPlay","setIsChecked","setShowFavorites","getData","addLikes","temp","find","removeLikes","indexOf","splice","updateCurrentPlay","clickedPlay","basename","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.13fc05b8.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst SearchContainer = (props) => {\r\n  const [title, updateTitle] = useState();\r\n\r\n  const handleInputChange = e => {\r\n    updateTitle(e.target.value);\r\n  }\r\n\r\n    return (\r\n    <div id=\"searchContainer\">\r\n\r\n      <div id=\"homeTitleInput\">\r\n        <input type=\"text\" id=\"title\" placeholder=\"Search Play Here\" onChange={handleInputChange}></input>\r\n      </div>\r\n      <div id=\"homeButtons\">\r\n      <Link to={{pathname:\"/default\", state: {title: title }}}>\r\n        <div id=\"matchingButton\">\r\n          <button type=\"button\" data-inline=\"true\" >Show matching Plays</button>\r\n        </div>\r\n      </Link>\r\n      <Link to={{pathname:\"/default\", state: {title: '' }}}>\r\n        <div id=\"showAllButton\">\r\n          <button type=\"button\" data-inline=\"true\"  >Show All Plays</button>\r\n        </div>\r\n      </Link>\r\n      </div>\r\n    </div> \r\n  );\r\n};\r\n\r\nexport default SearchContainer;","import React, { useEffect }from \"react\";\r\nimport SearchContainer from \"./SearchContainer\";\r\n\r\nconst HomePage = (props) => {\r\n\r\n  \r\n  {useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      console.log('This will run after 5 seconds!')\r\n    }, 5000);\r\n    clearTimeout(timer);\r\n    \r\n  }, [])}\r\n\r\n  return (\r\n\r\n\r\n      <div className=\"homePage\">\r\n        <div id=\"homeSearch\"> <SearchContainer /> \r\n        </div>\r\n        \r\n          <div id=\"heroCredit\">\r\n            Photo by{\" \"}\r\n            <a href=\"https://unsplash.com/@maxmuselmann?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">\r\n              Max Muselmann\r\n            </a>{\" \"}\r\n            on{\" \"}\r\n            <a href=\"https://unsplash.com/s/photos/shakespeare?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">\r\n              Unsplash\r\n            </a>\r\n          \r\n        </div>\r\n        \r\n      </div>\r\n  );\r\n};\r\nexport default HomePage;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Modal from \"react-modal\";\r\n\r\nconst HeaderBar = () => {\r\n  const [modalIsOpen, setIsOpen] = useState(false);\r\n  const openModal = () => {\r\n    setIsOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div id=\"headerBar\">\r\n      <div id=\"homeLogoButton\">\r\n        <Link to=\"/\">\r\n        <img src=\"https://img.icons8.com/office/30/000000/home--v1.png\" alt=\"homeLogo\"/>\r\n        </Link>\r\n      </div>\r\n\r\n      <div id=\"aboutButton\">\r\n        <button onClick={openModal} type=\"button\">\r\n          About\r\n        </button>\r\n      </div>\r\n      \r\n      <Modal id=\"modal\" isOpen={modalIsOpen} onRequestClose={closeModal}>\r\n        <button id=\"modalButton\" onClick={closeModal}>close</button>\r\n        <div id=\"modalBackground\">\r\n          <h1>About</h1>\r\n          <h3>Team Members</h3>\r\n          <p>Anro Tran</p>\r\n          <p>Peter Huang</p>\r\n          <p>Mohamed Aly</p>\r\n          <h3>Github Repo</h3>\r\n          <a href=\"https://github.com/phuan516/comp4513-assignment1\">\r\n            <p>Link to Repository</p>\r\n          </a>\r\n\r\n          <h3>Reference Links</h3>\r\n          <a href=\"https://blog.logrocket.com/how-to-build-tab-component-react/\">\r\n          <p>Building your own tab components</p>\r\n            </a>\r\n\r\n            <a href=\"https://stackoverflow.com/questions/24502898/show-or-hide-element-in-react\">\r\n          <p>How to hide or show elements in react</p>\r\n            </a>\r\n            <a href=\"https://www.w3schools.com/howto/tryit.asp?filename=tryhow_css_custom_scrollbar\">\r\n          <p>Custom scrollbars with webkit</p>\r\n            </a>\r\n            <a href=\"https://www.w3schools.com/howto/howto_css_full_page.asp\">\r\n          <p>How to add full page background image</p>\r\n            </a>\r\n\r\n            <a href=\"https://stackoverflow.com/questions/4137255/checkboxes-in-web-pages-how-to-make-them-bigger\">\r\n              <p>How to make checkboxes bigger with webkit</p> \r\n            </a>\r\n\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeaderBar;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst FavoriteItem = (props) => {\r\n  const remove = () => {\r\n    props.removeFromLike(props.play);\r\n    alert(props.play.title + \" has been removed from favorite\");\r\n  };\r\n\r\n  const updateCurrentPlay = () => {\r\n    props.updateCurrent(props.play);\r\n\r\n    const url = \"https://www.randyconnolly.com/funwebdev/3rd/api/shakespeare/play.php?name=\"+ props.play.id;\r\n    fetch (url)\r\n    .then (response => response.json())\r\n    .then(data => { localStorage.setItem(\"playInfo\", JSON.stringify(data))} )\r\n  }\r\n\r\n  \r\n\r\n  return (\r\n    <div id=\"favoriteItem\">\r\n      <Link to=\"/playDetails\">\r\n        <p onClick={updateCurrentPlay}> {\" \"}\r\n          {props.play.title}{\" \"} </p>\r\n      </Link>\r\n      \r\n      <button type=\"button\" id=\"deleteButton\" onClick={remove}>\r\n        Remove\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FavoriteItem;\r\n","import React from \"react\";\r\nimport FavoriteItem from \"./FavoriteItem\";\r\n\r\nconst FavoriteBox = (props) => {\r\n  return (\r\n    <div id=\"favoritesBox\">\r\n      <h1>Favorites</h1>\r\n      <hr/>\r\n      <div id=\"favoritesList\">\r\n        {props.plays.map((p, index) => (\r\n        <FavoriteItem play={p} removeFromLike={props.removeFromLike} \r\n        updateCurrent={props.updateCurrent} updateTab={props.updateTab}\r\n          key={index}/>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FavoriteBox;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\n\r\nconst FilterBox = (props) => {\r\n  const [filter, updateFilter] = useState({});\r\n  const [beforeCheck, setBeforeCheck] = useState({status: true})\r\n  const [afterCheck, setAfterCheck] = useState({status: true});\r\n\r\nuseEffect (() => {\r\n\r\n  //if title is set from search container, apply the filter upon first render of page.\r\n  if (props.title) {\r\n    updateFilter({title: props.title})\r\n    props.updateFilteredData({title: props.title});\r\n  } else {\r\n    props.updateFilteredData({});\r\n  }\r\n}, []\r\n);\r\n  //handles all field changes.\r\n  const handleFieldClick = (e) => {\r\n\r\n    const tempStateObj = {...filter};\r\n\r\n    //if a field becomes empty, remove it from state.\r\n    if (e.target.value === '' ) {\r\n        delete tempStateObj[e.target.name];\r\n    } else {\r\n    //undergo necessary state updates.\r\n    tempStateObj[e.target.name] = e.target.value;\r\n\r\n    //If it is for the before or after fields, must update the before and after states as these are distinct\r\n    //due to their checkbox functionality/processing.\r\n\r\n     if (e.target.name === 'before') {\r\n        setBeforeCheck({status: false, value: e.target.value })\r\n     }\r\n\r\n      if (e.target.name === 'after') {\r\n       setAfterCheck({status: false, value: e.target.value  })\r\n     }\r\n    \r\n    }\r\n \r\n    //update filter state.\r\n    updateFilter(tempStateObj);\r\n\r\n  }\r\n\r\n  //process the form submission up when \"filter\" clicked.\r\n const handleSubmit = e => {\r\n    props.updateFilteredData(filter);\r\n    e.preventDefault(); \r\n  }\r\n\r\n  //Checkbox functionality, of enabling and disabling values entered processed.\r\n  const handleCheckBoxClick = e => {\r\n  \r\n    const tempStateObj = {...filter};\r\n\r\n    if (e.target.name === 'before' && beforeCheck.status === false) {\r\n      setBeforeCheck({status: true, value: beforeCheck.value});\r\n      delete tempStateObj['before'];\r\n      \r\n    } else  {\r\n      if (e.target.name === 'before' &&  beforeCheck.status === true) {\r\n        setBeforeCheck({status: false, value: beforeCheck.value});\r\n        tempStateObj.before = beforeCheck.value;\r\n \r\n    } else {\r\n      if (e.target.name === 'after' &&  afterCheck.status === false) { \r\n        setAfterCheck({status: true, value: afterCheck.value});\r\n        delete tempStateObj['after'];\r\n    \r\n    } else {\r\n\r\n    if (e.target.name === 'after' &&  afterCheck.status === true) {\r\n      \r\n      setAfterCheck({status: false, value: afterCheck.value});\r\n      tempStateObj.after =  afterCheck.value;\r\n\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n    updateFilter(tempStateObj);\r\n   \r\n  }\r\n\r\n  //upon reset of form fields - all state must be emptied.\r\n  const resetFilter = e => {\r\n    updateFilter({});\r\n    setBeforeCheck({status: true});\r\n    setAfterCheck({status: true});\r\n  }\r\n\r\n  const updateBoxForFave = () => {\r\n    props.updateFaveBox();\r\n    props.updateIsChecked();\r\n  }\r\n  \r\n\r\n    return (\r\n    <div id=\"filterBox\">\r\n      <div id=\"filtersAndCheck\">\r\n        <div id=\"checkBoxDiv\"> <input type=\"checkbox\" className=\"checkboxFave\" onChange={updateBoxForFave}/> </div>\r\n        <h1 id=\"filterTitle\">Play Filters</h1>\r\n      </div>\r\n      <hr/>\r\n      <div id=\"filterContentBox\">\r\n        \r\n        <form onSubmit = {handleSubmit}>\r\n          <div id=\"searchTitleBox\">\r\n            <label htmlFor=\"title\">Title</label>\r\n            <br/>\r\n            <input type=\"text\" name=\"title\" id=\"searchTitleInput\" placeholder=\"Search Title\" onChange = {handleFieldClick}></input>\r\n          </div>\r\n          <div id=\"searchYearBox\">\r\n            <label htmlFor=\"year\" id=\"yearTitle\"> Year </label> <br />\r\n\r\n            <div id=\"beforeSearch\">\r\n              <div id=\"beforeCheckBox\">\r\n                <input type=\"checkbox\" name=\"before\" onChange={handleCheckBoxClick} />\r\n              </div>\r\n              <label htmlFor=\"before\" name=\"before\" id=\"labelBefore\">\r\n                Before\r\n                <input type=\"text\" name=\"before\" id=\"inputBefore\" disabled = {beforeCheck.status} onChange = {handleFieldClick}/>\r\n              </label>\r\n            </div>\r\n\r\n            <br/>\r\n\r\n            <div id=\"afterSearch\"> \r\n              <div id=\"afterCheckBox\">\r\n                <input type=\"checkbox\"  name=\"after\" onChange={handleCheckBoxClick}/> \r\n                <label htmlFor=\"after\" name=\"after\" id=\"labelAfter\"> \r\n                  After\r\n                  <input type=\"text\" name=\"after\" id=\"inputAfter\" disabled = {afterCheck.status} onChange = {handleFieldClick} />\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div id=\"genreBox\">\r\n            <label htmlFor=\"genre\">Genre</label>\r\n            <br/>\r\n            <select name=\"genre\" id=\"genre\" onChange = {handleFieldClick}>\r\n              <option  defaultValue = ''></option>\r\n              <option name = \"genre\" value=\"comedy\">comedy</option>\r\n              <option name = \"genre\" value=\"tragedy\">tragedy</option>\r\n              <option name = \"genre\" value=\"history\">history</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div id=\"filterButtons\">\r\n            <button type=\"submit\" id=\"filterButton\"> Filter </button>\r\n            <button type=\"reset\" id=\"clearButton\" onClick={resetFilter}> Clear </button>\r\n          </div>\r\n\r\n        </form>\r\n      </div>\r\n  </div>\r\n    \r\n    );\r\n    \r\n};\r\n\r\nexport default FilterBox;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ListBoxItem = (props) => {\r\n  const add = () => {\r\n    props.addToLike(props.play);\r\n  };\r\n\r\n  const currentPlay = () => {\r\n    props.updateCurrent(props.play);\r\n    const url =\r\n      \"https://www.randyconnolly.com/funwebdev/3rd/api/shakespeare/play.php?name=\" +\r\n      props.play.id;\r\n    fetch(url)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        localStorage.setItem(\"playInfo\", JSON.stringify(data));\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div id=\"listBoxItems\">\r\n      <p id=\"playInfoTitle\">{props.play.title}</p>\r\n      <p id=\"playDate\">{props.play.likelyDate}</p>\r\n      <div id=\"playListButtons\">\r\n        <button type=\"button\" id=\"likeButton\" onClick={add}>\r\n          ❤\r\n        </button>\r\n        <Link to=\"/playDetails\">\r\n          <button type=\"button\" onClick={currentPlay}>\r\n            View\r\n          </button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListBoxItem;\r\n","import React from \"react\";\r\nimport ListBoxItem from \"./ListBoxItem\";\r\nimport styled from \"styled-components\";\r\n\r\nconst H1 = styled.h1`\r\n  font-style: italic;\r\n  color: red;\r\n`;\r\n\r\nconst ListBox = (props) => {\r\n  const sortByTitle = () => {\r\n    props.sortTitle();\r\n  };\r\n\r\n  const sortByYear = () => {\r\n    props.sortYear();\r\n  };\r\n\r\n  return (\r\n    <div id=\"listBox\">\r\n      <h1 id=\"listTitle\">List / Match</h1>\r\n      <hr />\r\n\r\n      <div id=\"listPlayInfo\">\r\n        {props.matchesBoolean === true ? (\r\n          <div>\r\n            <div id=\"listHeader\">\r\n              <h2\r\n                id=\"titleLabel\"\r\n                style={{ cursor: \"pointer\" }}\r\n                onClick={sortByTitle}\r\n              >\r\n                Title\r\n              </h2>{\" \"}\r\n              <h2\r\n                id=\"listLabel\"\r\n                style={{ cursor: \"pointer\" }}\r\n                onClick={sortByYear}\r\n              >\r\n                Year\r\n              </h2>{\" \"}\r\n              <p></p>\r\n            </div>\r\n\r\n            <div id=\"listPlayBox\">\r\n              {props.plays.map((p, index) => (\r\n                <ListBoxItem\r\n                  play={p}\r\n                  addToLike={props.addToLike}\r\n                  updateCurrent={props.updateCurrent}\r\n                  key={index}\r\n                />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <H1>No Matches Found. Please Try Again! </H1>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListBox;\r\n","import React from \"react\";\r\nimport HeaderBar from \"./HeaderBar\";\r\nimport FavoriteBox from \"./FavoritesBox\";\r\nimport FilterBox from \"./FilterBox\";\r\nimport ListBox from \"./ListBox\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nconst DefaultPage = (props) => {\r\n  const location = useLocation();\r\n  //check if matches are found from filter.\r\n  const [matchesFound, setMatchesFound] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (location.state.filters) {\r\n      props.setFilteredData(location.state.filters);\r\n    }\r\n  }, []);\r\n\r\n  let title = \"\";\r\n  if (location.state.title) {\r\n    title = location.state.title;\r\n  }\r\n\r\n  const updateFilteredData = (filter) => {\r\n    let updatedFilteredData = [];\r\n\r\n    if (Object.keys(filter).length === 0) {\r\n      updatedFilteredData = [...props.mainData];\r\n    } else {\r\n      //Must convert to lower case to obtain all possible matches for title, before initiating filter.\r\n      if (filter.title) {\r\n        filter.title = filter.title.toLowerCase();\r\n      }\r\n\r\n      //Loop through main data, and contrast with each filter possibility, to render all possible matches.\r\n      //Checks if each \"filter\" state object property is set, and then it can verify whether it constains a match.\r\n      props.mainData.forEach((d) => {\r\n        if (filter.title && filter.genre && filter.before && filter.after) {\r\n          if (\r\n            d.title.toLowerCase().includes(filter.title) &&\r\n            d.genre === filter.genre &&\r\n            d.likelyDate < filter.before &&\r\n            d.likelyDate > filter.after\r\n          ) {\r\n            updatedFilteredData.push(d);\r\n          }\r\n        } else {\r\n          if (filter.title && filter.genre && filter.before) {\r\n            if (\r\n              d.title.toLowerCase().includes(filter.title) &&\r\n              d.genre === filter.genre &&\r\n              d.likelyDate < filter.before\r\n            ) {\r\n              updatedFilteredData.push(d);\r\n            }\r\n          } else {\r\n            if (filter.title && filter.before && filter.after) {\r\n              if (\r\n                d.title.toLowerCase().includes(filter.title) &&\r\n                d.likelyDate < filter.before &&\r\n                d.likelyDate > filter.after\r\n              ) {\r\n                updatedFilteredData.push(d);\r\n              }\r\n            } else {\r\n              if (filter.title && filter.after && filter.genre) {\r\n                if (\r\n                  d.title.toLowerCase().includes(filter.title) &&\r\n                  d.likelyDate > filter.after &&\r\n                  d.genre === filter.genre\r\n                ) {\r\n                  updatedFilteredData.push(d);\r\n                }\r\n              } else {\r\n                if (filter.genre && filter.before && filter.after) {\r\n                  if (\r\n                    d.genre === filter.genre &&\r\n                    d.likelyDate < filter.before &&\r\n                    d.likelyDate > filter.after\r\n                  ) {\r\n                    updatedFilteredData.push(d);\r\n                  }\r\n                } else {\r\n                  if (filter.title && filter.genre) {\r\n                    if (\r\n                      d.title.toLowerCase().includes(filter.title) &&\r\n                      d.genre === filter.genre\r\n                    ) {\r\n                      updatedFilteredData.push(d);\r\n                    }\r\n                  } else {\r\n                    if (filter.title && filter.after) {\r\n                      if (\r\n                        d.title.toLowerCase().includes(filter.title) &&\r\n                        d.likelyDate > filter.after\r\n                      ) {\r\n                        updatedFilteredData.push(d);\r\n                      }\r\n                    } else {\r\n                      if (filter.title && filter.before) {\r\n                        if (\r\n                          d.title.toLowerCase().includes(filter.title) &&\r\n                          d.likelyDate < filter.before\r\n                        ) {\r\n                          updatedFilteredData.push(d);\r\n                        }\r\n                      } else {\r\n                        if (filter.genre && filter.before) {\r\n                          if (\r\n                            d.genre === filter.genre &&\r\n                            d.likelyDate < filter.before\r\n                          ) {\r\n                            updatedFilteredData.push(d);\r\n                          }\r\n                        } else {\r\n                          if (filter.genre && filter.after) {\r\n                            if (\r\n                              d.genre === filter.genre &&\r\n                              d.likelyDate > filter.after\r\n                            ) {\r\n                              updatedFilteredData.push(d);\r\n                            }\r\n                          } else {\r\n                            if (filter.before && filter.after) {\r\n                              if (\r\n                                d.likelyDate < filter.before &&\r\n                                d.likelyDate > filter.after\r\n                              ) {\r\n                                updatedFilteredData.push(d);\r\n                              }\r\n                            } else {\r\n                              if (filter.genre) {\r\n                                if (d.genre === filter.genre) {\r\n                                  updatedFilteredData.push(d);\r\n                                }\r\n                              } else {\r\n                                if (filter.title) {\r\n                                  if (\r\n                                    d.title.toLowerCase().includes(filter.title)\r\n                                  ) {\r\n                                    updatedFilteredData.push(d);\r\n                                  }\r\n                                } else {\r\n                                  if (filter.before) {\r\n                                    if (d.likelyDate < filter.before) {\r\n                                      updatedFilteredData.push(d);\r\n                                    }\r\n                                  } else {\r\n                                    if (filter.after) {\r\n                                      if (d.likelyDate > filter.after) {\r\n                                        updatedFilteredData.push(d);\r\n                                      }\r\n                                    }\r\n                                  }\r\n                                }\r\n                              }\r\n                            }\r\n                          }\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    if (updatedFilteredData.length === 0) {\r\n      setMatchesFound(false);\r\n    } else {\r\n      setMatchesFound(true);\r\n    }\r\n\r\n    props.setFilteredData(updatedFilteredData);\r\n  };\r\n\r\n  const [sortedPlays, setsortedPlays] = useState(props.plays);\r\n\r\n  const sortTitle = () => {\r\n    let sortData = props.plays.sort((a, b) => {\r\n      let at = a.title.toLowerCase();\r\n      let bt = b.title.toLowerCase();\r\n\r\n      if (at < bt) {\r\n        return -1;\r\n      }\r\n      if (at > bt) {\r\n        return 1;\r\n      }\r\n      return 0;\r\n    });\r\n    setsortedPlays(sortData);\r\n    console.log([...sortData]);\r\n  };\r\n  const sortYear = () => {\r\n    let sortData = props.plays.sort((a, b) => {\r\n      let ay = parseInt(a.likelyDate, 10);\r\n      let by = parseInt(b.likelyDate, 10);\r\n\r\n      if (ay < by) {\r\n        return -1;\r\n      }\r\n      if (ay > by) {\r\n        return 1;\r\n      }\r\n      return 0;\r\n    });\r\n    setsortedPlays([...sortData]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"defaultPage\">\r\n      <HeaderBar />\r\n      <div id=\"defaultPageInfoBox\">\r\n        {props.showFavorites && props.isChecked === false ? (\r\n          <div id=\"defaultFavoriteBox\">\r\n            {\" \"}\r\n            <FavoriteBox\r\n              plays={props.likedPlays}\r\n              removeFromLike={props.removeFromLike}\r\n              updateCurrent={props.updateCurrent}\r\n            />{\" \"}\r\n          </div>\r\n        ) : (\r\n          <div id=\"hiddenFaveBox\"> </div>\r\n        )}\r\n\r\n        <FilterBox\r\n          updateFilteredData={updateFilteredData}\r\n          title={title}\r\n          matchesFound={matchesFound}\r\n          updateIsChecked={props.updateIsChecked}\r\n          updateFaveBox={props.updateFaveBox}\r\n        />\r\n        <ListBox\r\n          plays={props.plays}\r\n          addToLike={props.addToLike}\r\n          removeFromLike={props.removeFromLike}\r\n          updateCurrent={props.updateCurrent}\r\n          matchesBoolean={matchesFound}\r\n          sortTitle={sortTitle}\r\n          sortYear={sortYear}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DefaultPage;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst FavoriteItemDetails = (props) => {\r\n  const remove = () => {\r\n    props.removeFromLike(props.play);\r\n    alert(props.play.title + \" has been removed from favorite\");\r\n  };\r\n\r\n  const updateCurrentPlay = () => {\r\n    props.updateCurrent(props.play);\r\n\r\n    const url = \"https://www.randyconnolly.com/funwebdev/3rd/api/shakespeare/play.php?name=\"+ props.play.id;\r\n    fetch (url)\r\n    .then (response => response.json())\r\n    .then(data => { localStorage.setItem(\"playInfo\", JSON.stringify(data))} )\r\n    \r\n    props.updateTab();\r\n  }\r\n\r\n  \r\n\r\n  return (\r\n    <div id=\"favoriteItem\">\r\n      <Link to=\"/playDetails\">\r\n        <p onClick={updateCurrentPlay}> {\" \"}\r\n          {props.play.title}{\" \"} </p>\r\n\r\n      </Link>\r\n\r\n      <button type=\"button\" id=\"deleteButton\" onClick={remove}>\r\n        Remove\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FavoriteItemDetails;\r\n","import React from \"react\";\r\nimport FavoriteItemDetails from \"./FavoriteItemDetails\";\r\n\r\nconst FavoriteBoxDetails = (props) => {\r\n  return (\r\n    <div id=\"favoritesBox\">\r\n      <h1>Favorites</h1>\r\n      <hr/>\r\n      <div id=\"favoritesList\">\r\n        {props.plays.map((p, index) => (\r\n        <FavoriteItemDetails play={p} removeFromLike={props.removeFromLike} \r\n        updateCurrent={props.updateCurrent} updateTab={props.updateTab}\r\n          key={index}/>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FavoriteBoxDetails;\r\n","import React from \"react\";\r\n\r\nconst DetailsTab = (props) => {\r\n  return (\r\n    <div className=\"DetailsTab\">\r\n      <h1> Play Info </h1>\r\n      <p> Likely date of composition: {props.current.likelyDate}</p>\r\n      <p> Genre: {props.current.genre}</p>\r\n      <h1> Web Links</h1>\r\n      <p> Wiki Link: {props.current.wiki}</p>\r\n      <p> Gutenberg Link: {props.current.gutenberg}</p>\r\n      <p> Shakespear.org Link: {props.current.shakespeareOrg}</p>\r\n      <h1> Description </h1>\r\n      <p> {props.current.desc} </p>\r\n    </div>\r\n  );\r\n};\r\nexport default DetailsTab;\r\n","import React from \"react\";\r\n\r\nconst CharactersTab = (props) => {  \r\n\r\n  let i = [];\r\n  i = JSON.parse(localStorage.getItem(\"playInfo\"));\r\n  const personas = i.persona;\r\n\r\n  return (\r\n    <div className=\"CharactersTab\">\r\n      {personas.map((p, index) => {\r\n        return (\r\n          <div className=\"allPlayers\" key={index}>\r\n            <p key={index} className=\"position\">\r\n              Position: {p.position}\r\n            </p>\r\n            <p key={p.player} className=\"player\">\r\n              {\" \"}\r\n              {p.player}{\" \"}\r\n            </p>\r\n            <p key={p.desc} className=\"desc\">\r\n              {\" \"}\r\n              {p.desc}{\" \"}\r\n            </p>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\nexport default CharactersTab;\r\n","import React from \"react\";\r\nimport Highlighter from \"react-highlight-words\";\r\n\r\nconst TextTab = (props) => {\r\n\r\n  if (props.currentSpeaker === \"\") {\r\n    return (\r\n      <div className=\"TextTab\">\r\n        <h1>{props.playInfo.title}</h1>\r\n        <h2> {props.currentAct}</h2>\r\n        <h3> {props.currentScene}</h3>\r\n        <hr></hr>\r\n        <div id=\"sceneSpeeches\">\r\n          {props.playInfo.acts.map((a) => {\r\n            if (a.name === props.currentAct) {\r\n              return a.scenes.map((s, index) => {\r\n                if (s.name === props.currentScene) {\r\n                  return (\r\n                    <div id=\"actSceneDirection\" key={index}>\r\n                      <h4> {s.title} </h4>\r\n                      <h4> {s.stageDirection}</h4>\r\n                    </div>\r\n                  );\r\n                }\r\n              });\r\n            }\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    \r\n    return (\r\n      <div className=\"TextTab\">\r\n        <h1>{props.playInfo.title}</h1>\r\n        <h2> {props.currentAct}</h2>\r\n        <h3> {props.currentScene}</h3>\r\n        <hr></hr>\r\n        <div id=\"speakerSpeeches\">\r\n          {props.playInfo.acts.map((a) => {\r\n            if (a.name === props.currentAct) {\r\n              return a.scenes.map((s) => {\r\n                if (s.name === props.currentScene) {\r\n                  return s.speeches.map((speeches, index) => {\r\n                    if (speeches.speaker === props.currentSpeaker) {\r\n                      return (\r\n                        <div key={index}>\r\n                          <Highlighter\r\n                            searchWords={[props.highlightedWord]}\r\n                            textToHighlight={String(speeches.speaker)}\r\n                          />:\r\n                          <br /> \r\n                          <Highlighter\r\n                            searchWords={[props.highlightedWord]}\r\n                            textToHighlight={String(speeches.lines)}\r\n                          />\r\n                          <br /> <br />\r\n                        </div>\r\n                      );\r\n                    }\r\n                  });\r\n                }\r\n              });\r\n            }\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\nexport default TextTab;\r\n","import React from \"react\";\r\nimport DetailsTab from \"./DetailsTab\";\r\nimport CharactersTab from \"./CharactersTab\";\r\nimport TextTab from \"./TextTab\";\r\n\r\n\r\nconst Tabs = (props) => {\r\n  const handleDetailsTab = () => {\r\n    props.tabIsText(\"Details\");\r\n  };\r\n\r\n  const handleCharactersTab = () => {\r\n    props.tabIsText(\"Characters\");\r\n  };\r\n\r\n  const handleTextTab = () => {\r\n    props.tabIsText(\"Text\");\r\n  };\r\n\r\n  if (props.current.filename === \"\") {\r\n    return (\r\n      <div className=\"Tabs\">\r\n        <ul className=\"nav\">\r\n          <li className={props.tab === \"Details\" ? \"active\" : \"\"}>Details</li>\r\n        </ul>\r\n        <div className=\"outlet\">\r\n          <DetailsTab current={props.current} />\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n\r\n    return (\r\n      <div className=\"Tabs\">\r\n        <ul className=\"nav\">\r\n          <li\r\n            className={props.tab === \"Details\" ? \"active\" : \"\"}\r\n            onClick={handleDetailsTab}\r\n          >\r\n            {\" \"}\r\n            Details\r\n          </li>\r\n          <li\r\n            className={props.tab === \"Characters\" ? \"active\" : \"\"}\r\n            onClick={handleCharactersTab}\r\n          >\r\n            {\" \"}\r\n            Characters\r\n          </li>\r\n          <li\r\n            className={props.tab === \"Text\" ? \"active\" : \"\"}\r\n            onClick={handleTextTab}\r\n          >\r\n            {\" \"}\r\n            Text\r\n          </li>\r\n        </ul>\r\n        <div id=\"tabHR\"> <hr></hr> </div>\r\n        \r\n        <div className=\"outlet\">\r\n          {props.tab === \"Details\" ? (\r\n            <DetailsTab current={props.current} />\r\n          ) : props.tab === \"Characters\" ? (\r\n            <CharactersTab current={props.current}/>\r\n          ) : props.tab === \"Text\" ? (\r\n            <TextTab\r\n              current={props.current}\r\n              playInfo={JSON.parse(localStorage.getItem(\"playInfo\"))}\r\n              //playInfo={props.playInfo}\r\n              currentAct={props.currentAct}\r\n              currentScene={props.currentScene}\r\n              currentSpeaker={props.currentSpeaker}\r\n              highlightedWord={props.highlightedWord}\r\n\r\n            />\r\n          ) : \"\"}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\n/* From https://blog.logrocket.com/how-to-build-tab-component-react/*/\r\n\r\nexport default Tabs;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport HeaderBar from \"./HeaderBar\";\r\nimport FavoriteBoxDetails from \"./FavoritesBoxDetails\";\r\nimport Tabs from \"./TabComponent/Tabs\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../App.css\";\r\n\r\nconst PlayDetailPage = (props) => {\r\n  const [tab, setTab] = useState(\"Details\");\r\n  const [currentAct, setCurrentAct] = useState(\"ACT I\");\r\n  const [currentScene, setCurrentScene] = useState(\"SCENE I\");\r\n  const [currentSpeaker, setCurrentSpeaker] = useState(\"\");\r\n  const [highlightedWord, setHighlightedWord] = useState(\"\");\r\n\r\n\r\n  const tabIsText = (tab) => {\r\n    setTab(tab);\r\n  };\r\n\r\n  const updateTabThroughClick = () => {\r\n    setTab(\"Details\");\r\n  }\r\n\r\n  const handleCurrentAct = (e) => {\r\n    console.log(e.target.value);\r\n    setCurrentAct(e.target.value);\r\n  };\r\n\r\n  const handleCurrentScene = (e) => {\r\n    console.log(e.target.value);\r\n    setCurrentScene(e.target.value);\r\n  };\r\n\r\n  const handleCurrentSpeaker = (e) => {\r\n    if (e.target.value !== \"\" && e.target.value !== \"clear\") {\r\n      console.log(e.target.value);\r\n      setCurrentSpeaker(e.target.value);\r\n    } else if (e.target.value === \"clear\") {\r\n      setCurrentSpeaker(\"\");\r\n      console.log(\"Search is cleared -->\" + e.target.value);\r\n    }\r\n  };\r\n\r\n  const addToLike = () => {\r\n    props.addToLike(props.current);\r\n  };\r\n\r\n  const handleHighlightedWord = (e) => {\r\n    console.log(e.target.value);\r\n    setHighlightedWord(e.target.value);\r\n  };\r\n\r\n  useEffect((props) => {\r\n    const getInfo = async () => {\r\n      try {\r\n        const url = \"https://www.randyconnolly.com/funwebdev/3rd/api/shakespeare/play.php?name=\" + props.current.id;\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        localStorage.setItem(\"playInfo\", JSON.stringify(data));\r\n\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    };\r\n    // invoke the async function\r\n    getInfo();\r\n    \r\n  }, []);\r\n\r\n  const updateBoxForFave = () => {\r\n    props.updateFaveBox();\r\n    props.updateIsChecked();\r\n  }\r\n\r\n  if (tab === \"Text\") {\r\n    let i = [];\r\n    i = JSON.parse(localStorage.getItem(\"playInfo\"));\r\n\r\n    return (\r\n      <div className=\"playDetailsPage\">\r\n          <HeaderBar></HeaderBar>\r\n\r\n        <div id=\"playDetailsBox\">\r\n        {props.showFavorites && props.isChecked === false ? <div id=\"detailsFavoriteList\">\r\n            <FavoriteBoxDetails\r\n              plays={props.likedPlays}\r\n              removeFromLike={props.removeFromLike}\r\n              updateCurrent={props.updateCurrent}\r\n              updateTab={updateTabThroughClick}\r\n            />\r\n          </div> : <div id=\"hiddenFaveBox\"> </div>}\r\n\r\n          <div id=\"playTitleBox\">\r\n            <div id=\"checkAndTitle\"> \r\n              <div id=\"checkBoxDiv\"> <input type=\"checkbox\" className=\"checkboxFave\" onChange={updateBoxForFave}/> </div>\r\n              <h1 id=\"playTitle\">{props.current.title}</h1>\r\n            </div>\r\n            \r\n\r\n            <hr></hr>\r\n          \r\n            <div id=\"formBox\">\r\n              <form id=\"textFilterBox\">\r\n                {/* This handles the act filter and adds current act*/}\r\n\r\n                <select name=\"act\" id=\"act\" onChange={handleCurrentAct}>\r\n                  {i.acts.map((a) => {\r\n                    return (\r\n                      <option value={a.name} key={a.name}>\r\n                        {\" \"}\r\n                        {a.name}{\" \"}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </select>\r\n\r\n                {/* This handles the scene filter corresponding to the act*/}\r\n                <select name=\"scene\" id=\"scene\" onChange={handleCurrentScene}>\r\n                  {i.acts.map((act) => {\r\n                    if (act.name === currentAct) {\r\n                      return act.scenes.map((s) => {\r\n                        return (\r\n                          <option value={s.name} key={s.name}>\r\n                            {\" \"}\r\n                            {s.name}{\" \"}\r\n                          </option>\r\n                        );\r\n                      });\r\n                    }\r\n                  })}\r\n                </select>\r\n              </form>\r\n\r\n              <form className=\"playerSearch\">\r\n                {/* This handles the word filter corresponding to the speaker*/}\r\n                <select\r\n                  name=\"speaker\"\r\n                  id=\"speaker\"\r\n                  onChange={handleCurrentSpeaker}\r\n                >\r\n                  <option value=\"\"> Choose Player Here </option>\r\n                  {i.persona.map((p) => {\r\n                    return (\r\n                      <option value={p.player} key={p.player}>\r\n                        {\" \"}\r\n                        {p.player}{\" \"}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                  <option value=\"clear\"> CLEAR SEARCH </option>\r\n                </select>\r\n                <br />\r\n                <input\r\n                  id=\"highlightedWord\"\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  onChange={handleHighlightedWord}\r\n                />\r\n              </form>\r\n              </div>\r\n              <div id=\"textPlayDetailsButtons\">\r\n                <Link to={{pathname: \"/default\", state: {filters: props.filters}}} >\r\n                  <button type=\"button\" id=\"closeButton\"> Close </button>\r\n                </Link>\r\n                <button onClick={addToLike} id=\"likeButton\"> ❤ </button>\r\n              </div>\r\n            \r\n            </div>\r\n         \r\n\r\n          <div id=\"tabsBox\">\r\n            <Tabs\r\n              current={props.current}\r\n              tab={tab}\r\n              tabIsText={tabIsText}\r\n              currentAct={currentAct}\r\n              currentScene={currentScene}\r\n              currentSpeaker={currentSpeaker}\r\n              highlightedWord={highlightedWord}\r\n            />\r\n          </div>\r\n          </div>\r\n          \r\n        </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"playDetailsPage\">\r\n          <HeaderBar></HeaderBar>\r\n\r\n        <div id=\"playDetailsBox\">\r\n        {props.showFavorites && props.isChecked === false ? <div id=\"detailsFavoriteList\">\r\n            <FavoriteBoxDetails\r\n              plays={props.likedPlays}\r\n              removeFromLike={props.removeFromLike}\r\n              updateCurrent={props.updateCurrent}\r\n              updateTab={updateTabThroughClick}\r\n            />\r\n          </div> : <div id=\"hiddenFaveBox\"> </div>}\r\n          \r\n\r\n          <div id=\"playTitleBox\">\r\n            <div id=\"checkAndTitle\"> \r\n              <div id=\"checkBoxDiv\"> <input type=\"checkbox\" className=\"checkboxFave\" onChange={updateBoxForFave}/> </div>\r\n              <h1 id=\"playTitle\">{props.current.title}</h1>\r\n            </div>\r\n            <hr></hr>\r\n            <div id=\"playSummaryBox\">\r\n              <div id=\"synopsisBox\">{props.current.synopsis}</div>\r\n\r\n              <div id=\"playDetailsButtons\">\r\n                <Link to={{pathname: \"/default\", state: {filters: props.filters}}} >\r\n                  <button type=\"button\" id=\"closeButton\"> Close </button>\r\n                </Link>\r\n                <button onClick={addToLike} id=\"likeButton\"> ❤ </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div id=\"tabsBox\">\r\n            <Tabs\r\n              current={props.current}\r\n              tab={tab}\r\n              tabIsText={tabIsText}\r\n              currentAct={currentAct}\r\n              currentScene={currentScene}\r\n              currentSpeaker={currentSpeaker}\r\n              highlightedWord={highlightedWord}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default PlayDetailPage;\r\n","import HomePage from \"./components/HomePage\";\r\nimport DefaultPage from \"./components/DefaultPage\";\r\nimport PlayDetailPage from \"./components/PlayDetailPage\";\r\nimport { HashRouter, Route } from \"react-router-dom\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nfunction App() {\r\n  const [data, setData] = useState([]);\r\n  const [filteredData, setFilteredData] = useState([]);\r\n  const [like, setLike] = useState([]);\r\n  const [currentPlay, setCurrentPlay] = useState([]);\r\n\r\n  const [isChecked, setIsChecked] = useState(false);\r\n  const [showFavorites, setShowFavorites] = useState(true); \r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      try {\r\n        const url =\r\n          \"https://www.randyconnolly.com//funwebdev/3rd/api/shakespeare/list.php\";\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n\r\n        localStorage.setItem(\"playData\", JSON.stringify(data));\r\n        setData(data);\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    };\r\n\r\n    if (localStorage.getItem(\"playData\") == null) {\r\n      getData();\r\n    } else {\r\n      setData(JSON.parse(localStorage.getItem(\"playData\")));\r\n    }\r\n\r\n    // invoke the async function\r\n  }, []);\r\n\r\n  const addLikes = (play) => {\r\n    let temp = [...like];\r\n    if (!temp.find((e) => e.title === play.title)) {\r\n      temp.push(play);\r\n      setLike(temp);\r\n    } else {\r\n      console.log(\"already in list\");\r\n    }\r\n  };\r\n\r\n  const removeLikes = (play) => {\r\n    const temp = [...like];\r\n    const index = temp.indexOf(play);\r\n    temp.splice(index, 1);\r\n    setLike(temp);\r\n  };\r\n\r\n  const updateCurrentPlay = (clickedPlay) => {\r\n    setCurrentPlay(clickedPlay);\r\n    \r\n  };\r\n\r\n\r\n  const updateIsChecked = () => {\r\n    setIsChecked(!isChecked);\r\n  }\r\n\r\n  const updateFaveBox = () => {\r\n    setShowFavorites(!showFavorites);\r\n  }\r\n  \r\n  return (\r\n    <main>\r\n      <HashRouter basename='/'>\r\n      <Route path=\"/\" exact component={HomePage} />\r\n      <Route path=\"/home\" exact component={HomePage}/>\r\n        <Route path=\"/default\">\r\n        <DefaultPage\r\n              mainData={data}\r\n              setFilteredData={setFilteredData}\r\n              plays={filteredData}\r\n              likedPlays={like}\r\n              addToLike={addLikes}\r\n              removeFromLike={removeLikes}\r\n              updateCurrent={updateCurrentPlay}\r\n              current={currentPlay}\r\n\r\n              isChecked={isChecked}\r\n              updateIsChecked={updateIsChecked}\r\n\r\n              showFavorites={showFavorites}\r\n              updateFaveBox={updateFaveBox}\r\n\r\n            />;\r\n            \r\n        </Route>\r\n      <Route path=\"/playDetails\">\r\n        <PlayDetailPage\r\n          plays={data}\r\n          likedPlays={like}\r\n          addToLike={addLikes}\r\n          removeFromLike={removeLikes}\r\n          current={currentPlay}\r\n          updateCurrent={updateCurrentPlay}\r\n          filters={filteredData}\r\n\r\n          isChecked={isChecked}\r\n          updateIsChecked={updateIsChecked}\r\n\r\n          showFavorites={showFavorites}\r\n          updateFaveBox={updateFaveBox}\r\n        />\r\n      </Route>\r\n     </ HashRouter>\r\n    </main>\r\n  );\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}